/*==========================================================================
	EmployeeUpdateFormController.java
	- 사용자 정의 컨트롤러
	- 직원 데이터 수정 폼 요청에 대한 액션 처리
	- 지역, 부서, 직위 선택 옵션 제공
	  → DAO의 searchId(), regionList(), departmentList(), positionList() 호출 필요
	- DAO 객체에 대한 의존성 주입을 위한 준비
	  → 인터페이스 형태의 자료형을 속성으로 구성
	  → setter 구성
===========================================================================*/

package com.test.mvc;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.Controller;

// ※ Spring 의 『Controller』 인터페이스를 구현하는 방법을 통해
//	  사용자 정의 컨트롤러 클래스를 구성한다.
public class EmployeeUpdateFormController implements Controller
{
	// check~!!!
	// EmployeeInsertFormController 구성했을 때 와는 다른 방식으로 처리~!!!
	// EmployeeInsertFormController 의 경우에는
	// 필요한 모든 메소드를 EmployeeDAO 에 정의해 두었던 상태
	
	// 주요 속성 구성
	private IEmployeeDAO employeeDao;
	private IRegionDAO regionDao;
	private IDepartmentDAO departmentDao;
	private IPositionDAO positionDao;
	
	// setter 구성
	public void setEmployeeDao(IEmployeeDAO employeeDao)
	{
		this.employeeDao = employeeDao;
	}



	public void setRegionDao(IRegionDAO regionDao)
	{
		this.regionDao = regionDao;
	}



	public void setDepartmentDao(IDepartmentDAO departmentDao)
	{
		this.departmentDao = departmentDao;
	}



	public void setPositionDao(IPositionDAO positionDao)
	{
		this.positionDao = positionDao;
	}



	@Override
	public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception
	{
		// Controller 가 수행해야 할 액션 코드
		
		ModelAndView mav = new ModelAndView();
		
		
		
		return mav;
	}
	
}












