/*=========================================================================
	#26. EmployeeUpdateController.java
	- 사용자 정의 컨트롤러
	- 직원 데이터 수정 액션 처리
	  → DAO 의 modify() 메소드 호출
	     → DAO 객체에 대한 의존성 주입을 위한 준비
	        → 인터페이스 형태의 자료형을 속성으로 구성
	        → setter 구성
	- 액션 처리 이후 employeelist.action 을 다시 요청할 수 있도록 안내
      → redirect : employeelist.action 
==========================================================================*/

package com.test.mvc;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.Controller;

// ※ Spring 의 『Controller』 인터페이스를 구현하는 방법을 통해
//	  사용자 정의 컨트롤러 클래스를 구성한다.
public class EmployeeUpdateController implements Controller
{
	// 주요 속성 구성
	private IEmployeeDAO dao;
	
	// setter 구성
	public void setDao(IEmployeeDAO dao)
	{
		this.dao = dao;
	}



	@Override
	public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception
	{
		// Controller 가 수행해야 할 액션 코드
		
		ModelAndView mav = new ModelAndView();
		
		// 이전 페이지(→ EmployeeUpedateForm.jsp)로부터 넘어온 데이터 수신
		//-- employeeId, name, ssn1, ssn2, birthday, lunar, telephone
		//	 regionId, departmentId, positionId, basicPay, extraPay
		
		String employeeId = request.getParameter("employeeId");
		String name = request.getParameter("name");
		String ssn1 = request.getParameter("ssn");
		String ssn2 = request.getParameter("ssn2");
		String birthday = request.getParameter("birthday");
		String lunar = request.getParameter("lunar");
		String telephone = request.getParameter("telephone");
		String regionId = request.getParameter("regionId");
		String departmentId = request.getParameter("departmentId");
		String positionId = request.getParameter("positionId");
		String basicPay = request.getParameter("basicPay");
		String extraPay = request.getParameter("extraPay");
		
		try
		{
			Employee employee = new Employee();
			
			employee.setEmployeeId(employeeId);
			employee.setName(name);
			employee.setSsn1(ssn1);
			employee.setSsn2(ssn2);
			employee.setBirthday(birthday);
			employee.setLunar(Integer.parseInt(lunar));
			employee.setTelephone(telephone);
			employee.setRegionId(regionId);
			employee.setDepartmentId(departmentId);
			employee.setPositionId(positionId);
			employee.setBasicPay(Integer.parseInt(basicPay));
			if (extraPay!=null)
			{
				employee.setExtraPay(Integer.parseInt(extraPay));
			}
			else
				employee.setExtraPay(0);
			
			dao.modify(employee);
			
			// 수신된 내용을 통한 분기 처리 생략
			
			//mav.setViewName("/WEB-INF/view/EmployeeList.jsp");
			mav.setViewName("redirect:employeeList.action");
			
		} catch (Exception e)
		{
			System.out.println(e.toString());
		}
		
		return mav;
	}
	
}












